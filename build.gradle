group 'tw.bjn.pg'
version '1.0-SNAPSHOT'

apply plugin: 'java'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    group = rootProject.group
    version = rootProject.version
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    dependencies {
        annotationProcessor('org.projectlombok:lombok:1.18.8')
        compileOnly('org.projectlombok:lombok:1.18.8')
        testAnnotationProcessor('org.projectlombok:lombok:1.18.8')
        testCompileOnly('org.projectlombok:lombok:1.18.8')
    }

    test {
        testLogging.showStandardStreams = true
//        testLogging.exceptionFormat = 'full'
        testLogging.events = ["passed", "skipped", "failed"]
        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Test: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '||  ', endItem = '  ||'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('=' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('=' * repeatLength))
            }
        }
    }

    task stage(dependsOn: ['build', 'clean'])
    build.mustRunAfter clean
}
